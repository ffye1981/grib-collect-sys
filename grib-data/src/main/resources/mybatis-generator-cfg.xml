<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
		"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >

<!-- 此文件只是mybatis 的数据库自动生成映射文件，实体类，接口等方法的，发布时，不用提交此文件，也可删除 -->
<generatorConfiguration>
	<!-- 引用的jdbc的类路径，这里将jdbc jar和generator的jar包放在一起了 -->
	<classPathEntry
			location="D:\develop_app\apache-maven-3.6.0\repository\postgresql\postgresql\9.1-901-1.jdbc4\postgresql-9.1-901-1.jdbc4.jar" />
	<!-- targetRuntime: 此属性用于指定生成的代码的运行时环境。该属性支持以下可选值(MyBatis3/MyBatis3Simple/Ibatis2Java2/Ibatis2Java5)-->
	<context id="context1" targetRuntime="MyBatis3">
		<commentGenerator >
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="false" />
			<property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳 -->
		</commentGenerator>

		<!-- 指定的jdbc的连接信息 -->
		<jdbcConnection driverClass="org.postgresql.Driver"
						connectionURL="jdbc:postgresql://localhost:5432/zgWeather?charSet=utf-8" userId="postgres"
						password="postgres" />

		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址 Model -->
		<javaModelGenerator targetPackage="com.zgss.grib.gribdata.entity"
							targetProject="src\main\java">
			<property name="enableSubPackages" value="false" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成map.xml文件 XML -->
		<sqlMapGenerator targetPackage="\"
						 targetProject="src\main\resources\xml">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 生成map.xml对应client，也就是接口DAO-->
		<javaClientGenerator targetPackage="com.zgss.grib.gribdata.mapper"
							 targetProject="src\main\java" type="XMLMAPPER">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- schema：数据库名 tableName：对应的数据库表 domainObjectName：要生成的实体类 enable*ByExample：
			是否生成 example类 -->
		<table schema="public" tableName="Legend"
			   domainObjectName="Legend"
			   enableCountByExample="false"
			   enableDeleteByExample="false"
			   enableSelectByExample="false"
			   enableUpdateByExample="false"
			   delimitIdentifiers="true">
			<!-- 忽略列，不生成bean 字段 -->
			<ignoreColumn column="shape" />
			<!-- 指定列的java数据类型
			<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /> -->
		</table>

	</context>
</generatorConfiguration>